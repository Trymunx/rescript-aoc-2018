// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Belt_SetInt = require("rescript/lib/js/belt_SetInt.js");

function $$parseInt(x) {
  return Belt_Option.getWithDefault(Belt_Int.fromString(x), 0);
}

var input = Fs.readFileSync("input/01.txt", "utf8").trim().split("\n").map($$parseInt);

var part1 = input.reduce((function (sum, n) {
        return sum + n | 0;
      }), 0);

console.log("Day 1 part 1", part1);

function solve(_input, _initial, _seen) {
  while(true) {
    var seen = _seen;
    var initial = _initial;
    var input = _input;
    var n = input.shift();
    if (n === undefined) {
      return initial;
    }
    var sum = initial + n | 0;
    if (Belt_SetInt.has(seen, sum)) {
      return sum;
    }
    _seen = Belt_SetInt.add(seen, sum);
    _initial = sum;
    _input = input.concat([n]);
    continue ;
  };
}

var part2 = solve(input, 0, Belt_SetInt.fromArray([0]));

console.log("Day 1 part 2", part2);

var examples = [
  {
    input: "+1, -1",
    output: 0
  },
  {
    input: "+3, +3, +4, -2, -4",
    output: 10
  },
  {
    input: "-6, +3, +8, +5, -6",
    output: 5
  },
  {
    input: "+7, +7, -2, -7, -4",
    output: 14
  }
];

examples.forEach(function (example) {
      var output = solve(example.input.split(",").map($$parseInt), 0, Belt_SetInt.fromArray([0]));
      if (output !== example.output) {
        console.log("expected", example.output, "got", output);
        return ;
      }
      
    });

exports.$$parseInt = $$parseInt;
exports.input = input;
exports.part1 = part1;
exports.solve = solve;
exports.part2 = part2;
exports.examples = examples;
/* input Not a pure module */
